{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/hooks/useColorScheme.ts","../src/hooks/usePrefersReducedMotion.ts","../src/utils/index.ts","../src/utils/theme.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/component/ActivityCalendar.tsx"],"sourcesContent":["export const NAMESPACE = 'react-activity-calendar';\n\nexport const LEVEL_COUNT = 5;\n\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n\nexport const DEFAULT_MONTH_LABELS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nexport const DEFAULT_WEEKDAY_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const DEFAULT_LABELS = {\n  months: DEFAULT_MONTH_LABELS,\n  weekdays: DEFAULT_WEEKDAY_LABELS,\n  totalCount: '{{count}} activities in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More',\n  },\n};\n","import { useEffect, useState } from 'react';\n\nexport function useColorScheme() {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('light');\n\n  const onChange = (event: MediaQueryListEvent) => setColorScheme(event.matches ? 'dark' : 'light');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n\n    mediaQuery.addEventListener('change', onChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', onChange);\n    };\n  }, []);\n\n  return colorScheme;\n}\n","import { useEffect, useState } from 'react';\n\nconst query = '(prefers-reduced-motion: reduce)';\n\nexport function usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(true);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(query);\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    const onChange = (event: MediaQueryListEvent) => {\n      setPrefersReducedMotion(event.matches);\n    };\n\n    mediaQuery.addEventListener('change', onChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', onChange);\n    };\n  }, []);\n\n  return prefersReducedMotion;\n}\n","import type { Day as WeekDay } from 'date-fns';\nimport {\n  differenceInCalendarDays,\n  eachDayOfInterval,\n  formatISO,\n  getDay,\n  getMonth,\n  nextDay,\n  parseISO,\n  subWeeks,\n} from 'date-fns';\n\nimport { DEFAULT_MONTH_LABELS, MIN_DISTANCE_MONTH_LABELS, NAMESPACE } from '../constants';\nimport { Activity, Week } from '../types';\n\ninterface Label {\n  x: number;\n  y: number;\n  text: string;\n}\n\nexport function groupByWeeks(\n  days: Array<Activity>,\n  weekStart: WeekDay = 0, // 0 = Sunday\n): Array<Week> {\n  if (days.length === 0) {\n    return [];\n  }\n\n  const normalizedDays = fillHoles(days);\n\n  // Determine the first date of the calendar. If the first date is not the\n  // set start weekday, the selected weekday one week earlier is used.\n  const firstDate = parseISO(normalizedDays[0].date);\n  const firstCalendarDate =\n    getDay(firstDate) === weekStart ? firstDate : subWeeks(nextDay(firstDate, weekStart), 1);\n\n  // To correctly group activities by week, it is necessary to left pad the\n  // list because the first date might not be set start weekday.\n  const paddedDays = [\n    ...Array(differenceInCalendarDays(firstDate, firstCalendarDate)).fill(undefined),\n    ...normalizedDays,\n  ];\n\n  return Array(Math.ceil(paddedDays.length / 7))\n    .fill(undefined)\n    .map((_, calendarWeek) => paddedDays.slice(calendarWeek * 7, calendarWeek * 7 + 7));\n}\n\n/**\n * The calendar expects a continuous sequence of days, so fill gaps with empty\n * activity data.\n */\nfunction fillHoles(days: Array<Activity>): Array<Activity> {\n  const daysMap = days.reduce((map, day) => {\n    map.set(day.date, day);\n    return map;\n  }, new Map<string, Activity>());\n\n  return eachDayOfInterval({\n    start: parseISO(days[0].date),\n    end: parseISO(days[days.length - 1].date),\n  }).map(day => {\n    const date = formatISO(day, { representation: 'date' });\n\n    if (daysMap.has(date)) {\n      return daysMap.get(date) as Activity;\n    }\n\n    return {\n      date,\n      count: 0,\n      level: 0,\n    };\n  });\n}\n\nexport function getMonthLabels(\n  weeks: Array<Week>,\n  monthNames: Array<string> = DEFAULT_MONTH_LABELS,\n): Array<Label> {\n  return weeks\n    .reduce<Array<Label>>((labels, week, index) => {\n      const firstWeekDay = week.find(day => day !== undefined);\n\n      if (!firstWeekDay) {\n        throw new Error(`Unexpected error: Week is empty: [${week}].`);\n      }\n\n      const month = monthNames[getMonth(parseISO(firstWeekDay.date))];\n      const prev = labels[labels.length - 1];\n\n      if (index === 0 || prev.text !== month) {\n        return [\n          ...labels,\n          {\n            x: index,\n            y: 0,\n            text: month,\n          },\n        ];\n      }\n\n      return labels;\n    }, [])\n    .filter((label, index, labels) => {\n      if (index === 0) {\n        return labels[1] && labels[1].x - label.x > MIN_DISTANCE_MONTH_LABELS;\n      }\n\n      return true;\n    });\n}\n\nexport function getClassName(name: string, styles?: string): string {\n  if (styles) {\n    return `${NAMESPACE}__${name} ${styles}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n\nexport function generateEmptyData(): Array<Activity> {\n  const year = new Date().getFullYear();\n  const days = eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31),\n  });\n\n  return days.map(date => ({\n    date: formatISO(date, { representation: 'date' }),\n    count: 0,\n    level: 0,\n  }));\n}\n","import chroma from 'chroma-js';\n\nimport { LEVEL_COUNT } from '../constants';\nimport { Color, ColorScale, Theme, ThemeInput } from '../types';\n\nexport const defaultTheme = createTheme({\n  light: ['hsl(0, 0%, 92%)', 'hsl(0, 0%, 26%)'],\n  dark: ['hsl(0, 0%, 20%)', 'hsl(0, 0%, 92%)'],\n});\n\nexport function createTheme(theme?: ThemeInput): Theme {\n  if (theme) {\n    validateTheme(theme);\n\n    theme.light = theme.light ?? defaultTheme.light;\n    theme.dark = theme.dark ?? defaultTheme.dark;\n\n    return {\n      light: isColorScale(theme.light) ? theme.light : createColorScale(theme.light),\n      dark: isColorScale(theme.dark) ? theme.dark : createColorScale(theme.dark),\n    };\n  }\n\n  return defaultTheme;\n}\n\nfunction validateTheme(theme: ThemeInput) {\n  if (typeof theme !== 'object' || (theme.light === undefined && theme.dark === undefined)) {\n    throw new Error(\n      `The theme object must contain at least one of the fields \"light\" and \"dark\" with exactly 2 or ${LEVEL_COUNT} colors respectively.`,\n    );\n  }\n\n  if (theme.light) {\n    const { length } = theme.light;\n    if (length !== 2 && length !== LEVEL_COUNT) {\n      throw new Error(\n        `theme.light must contain exactly 2 or ${LEVEL_COUNT} colors, ${length as number} passed.`,\n      );\n    }\n  }\n\n  if (theme.dark) {\n    const { length } = theme.dark;\n    if (length !== 2 && length !== LEVEL_COUNT) {\n      throw new Error(\n        `theme.dark must contain exactly 2 or ${LEVEL_COUNT} colors, ${length as number} passed.`,\n      );\n    }\n  }\n}\n\nfunction isColorScale(colors: Array<unknown>): colors is ColorScale {\n  const invalidColor = colors.find(color => !chroma.valid(color));\n\n  if (invalidColor) {\n    throw new Error(`Invalid color \"${invalidColor}\" passed. All CSS color formats are accepted.`);\n  }\n\n  return colors.length === LEVEL_COUNT;\n}\n\nfunction createColorScale(colors: [from: Color, to: Color]): ColorScale {\n  return chroma.scale(colors).mode('lch').colors(LEVEL_COUNT) as ColorScale;\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import chroma from 'chroma-js';\nimport type { Day as WeekDay } from 'date-fns';\nimport { getYear, parseISO } from 'date-fns';\nimport React, { CSSProperties, Fragment, FunctionComponent, ReactElement } from 'react';\n\nimport {\n  DEFAULT_LABELS,\n  DEFAULT_WEEKDAY_LABELS,\n  LEVEL_COUNT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n} from '../constants';\nimport { useColorScheme } from '../hooks/useColorScheme';\nimport { usePrefersReducedMotion } from '../hooks/usePrefersReducedMotion';\nimport {\n  Activity,\n  BlockElement,\n  EventHandlerMap,\n  Labels,\n  ReactEvent,\n  SVGRectEventHandler,\n  ThemeInput,\n} from '../types';\nimport { generateEmptyData, getClassName, getMonthLabels, groupByWeeks } from '../utils';\nimport { createTheme } from '../utils/theme';\nimport styles from './styles.module.css';\n\nexport interface Props {\n  /**\n   * List of calendar entries. Every `Activity` object requires an ISO 8601\n   * `date` string in the format `yyyy-MM-dd`, a `count` property with the\n   * amount of tracked data and a `level` property in the range `0-4` to\n   * specify activity intensity.\n   *\n   * Example object:\n   *\n   * ```json\n   * {\n   *   date: \"2021-02-20\",\n   *   count: 16,\n   *   level: 3\n   * }\n   * ```\n   */\n  data: Array<Activity>;\n  /**\n   * Margin between blocks in pixels.\n   */\n  blockMargin?: number;\n  /**\n   * Border radius of blocks in pixels.\n   */\n  blockRadius?: number;\n  /**\n   * Block size in pixels.\n   */\n  blockSize?: number;\n  /**\n   * Use a specific color scheme instead of the system one. Supported values\n   * are `'light'` and `'dark'`.\n   */\n  colorScheme?: 'light' | 'dark';\n  /**\n   * Event handlers to register for the SVG `<rect>` elements that are used to\n   * render the calendar days. Handler signature: `event => activity => void`\n   */\n  eventHandlers?: EventHandlerMap;\n  /**\n   * Font size for text in pixels.\n   */\n  fontSize?: number;\n  /**\n   * Toggle to hide color legend below calendar.\n   */\n  hideColorLegend?: boolean;\n  /**\n   * Toggle to hide month labels above calendar.\n   */\n  hideMonthLabels?: boolean;\n  /**\n   * Toggle to hide total count below calendar.\n   */\n  hideTotalCount?: boolean;\n  /**\n   * Localization strings for all calendar labels.\n   *\n   * `totalCount` supports the placeholders `{{count}}` and `{{year}}`.\n   */\n  labels?: Labels;\n  /**\n   * Toggle for loading state. `data` property will be ignored if set.\n   */\n  loading?: boolean;\n  /**\n   * Render prop for calendar blocks (activities). For example, useful to wrap\n   * the element with a tooltip component. Use `React.cloneElement` to pass\n   * additional props to the element if necessary.\n   */\n  renderBlock?: (block: BlockElement, activity: Activity) => ReactElement;\n  /**\n   * Toggle to show weekday labels left to the calendar.\n   */\n  showWeekdayLabels?: boolean;\n  /**\n   * Style object to pass to component container.\n   */\n  style?: CSSProperties;\n  /**\n   * Set the calendar colors for the `light` and `dark` system color scheme. The\n   * color scale for at least one color scheme needs to be specified. For\n   * undefined values, the default theme is selected. By default, the calendar\n   * will use the currently set system color scheme, but you can enforce a\n   * specific color scheme with the `colorScheme` prop.\n   *\n   * Define each color scale explicitly with five colors or pass exactly two\n   * colors (lowest and highest intensity) to calculate a single-hue scale.\n   * Colors can be specified in any valid CSS format.\n   *\n   * Example:\n   *\n   * ```tsx\n   * <ActivityCalendar\n   *   data={data}\n   *   theme={{\n   *     light: ['hsl(0, 0%, 92%)', 'firebrick'],\n   *     dark: ['#333', 'rgb(214, 16, 174)'],\n   *   }}\n   * />\n   * ```\n   *\n   */\n  theme?: ThemeInput;\n  /**\n   * Overwrite the total activity count.\n   */\n  totalCount?: number;\n  /**\n   * Index of day to be used as start of week. 0 represents Sunday.\n   */\n  weekStart?: WeekDay;\n}\n\nconst ActivityCalendar: FunctionComponent<Props> = ({\n  data,\n  blockMargin = 4,\n  blockRadius = 2,\n  blockSize = 12,\n  colorScheme = undefined,\n  eventHandlers = {},\n  fontSize = 14,\n  hideColorLegend = false,\n  hideMonthLabels = false,\n  hideTotalCount = false,\n  labels: labelsProp = undefined,\n  loading = false,\n  renderBlock = undefined,\n  showWeekdayLabels = false,\n  style = {},\n  theme: themeProp = undefined,\n  totalCount: totalCountProp = undefined,\n  weekStart = 0, // Sunday\n}: Props) => {\n  const theme = createTheme(themeProp);\n  const systemColorScheme = useColorScheme();\n  const colorScale = theme[colorScheme ?? systemColorScheme];\n\n  const useAnimation = !usePrefersReducedMotion();\n\n  if (loading) {\n    data = generateEmptyData();\n  }\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  const year = getYear(parseISO(data[0]?.date));\n  const weeks = groupByWeeks(data, weekStart);\n\n  const labels = Object.assign({}, DEFAULT_LABELS, labelsProp);\n  const textHeight = hideMonthLabels ? 0 : fontSize + 2 * blockMargin;\n\n  function getDimensions() {\n    return {\n      width: weeks.length * (blockSize + blockMargin) - blockMargin,\n      height: textHeight + (blockSize + blockMargin) * 7 - blockMargin,\n    };\n  }\n\n  function getEventHandlers(activity: Activity): SVGRectEventHandler {\n    return (\n      Object.keys(eventHandlers) as Array<keyof SVGRectEventHandler>\n    ).reduce<SVGRectEventHandler>(\n      (handlers, key) => ({\n        ...handlers,\n        [key]: (event: ReactEvent<SVGRectElement>) => eventHandlers[key]?.(event)(activity),\n      }),\n      {},\n    );\n  }\n\n  function renderCalendar() {\n    return weeks\n      .map((week, weekIndex) =>\n        week.map((activity, dayIndex) => {\n          if (!activity) {\n            return null;\n          }\n\n          const style =\n            loading && useAnimation\n              ? {\n                  animation: `${styles.loadingAnimation} 1.75s ease-in-out infinite`,\n                  animationDelay: `${weekIndex * 20 + dayIndex * 20}ms`,\n                }\n              : undefined;\n\n          const block = (\n            <rect\n              {...getEventHandlers(activity)}\n              x={0}\n              y={textHeight + (blockSize + blockMargin) * dayIndex}\n              width={blockSize}\n              height={blockSize}\n              rx={blockRadius}\n              ry={blockRadius}\n              data-date={activity.date}\n              data-level={activity.level}\n              style={style}\n            />\n          );\n\n          return (\n            <Fragment key={activity.date}>\n              {renderBlock ? renderBlock(block, activity) : block}\n            </Fragment>\n          );\n        }),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderFooter() {\n    if (hideTotalCount && hideColorLegend) {\n      return null;\n    }\n\n    const totalCount =\n      typeof totalCountProp === 'number'\n        ? totalCountProp\n        : data.reduce((sum, activity) => sum + activity.count, 0);\n\n    return (\n      <footer\n        className={getClassName('footer', styles.footer)}\n        style={{ marginTop: 2 * blockMargin, fontSize }}\n      >\n        {/* Placeholder */}\n        {loading && <div>&nbsp;</div>}\n\n        {!loading && !hideTotalCount && (\n          <div className={getClassName('count')}>\n            {labels.totalCount\n              ? labels.totalCount\n                  .replace('{{count}}', String(totalCount))\n                  .replace('{{year}}', String(year))\n              : `${totalCount} activities in ${year}`}\n          </div>\n        )}\n\n        {!loading && !hideColorLegend && (\n          <div className={getClassName('legend-colors', styles.legendColors)}>\n            <span style={{ marginRight: '0.4em' }}>{labels?.legend?.less ?? 'Less'}</span>\n            {Array(LEVEL_COUNT)\n              .fill(undefined)\n              .map((_, level) => (\n                <svg width={blockSize} height={blockSize} key={level}>\n                  <rect\n                    width={blockSize}\n                    height={blockSize}\n                    fill={colorScale[level]}\n                    rx={blockRadius}\n                    ry={blockRadius}\n                  />\n                </svg>\n              ))}\n            <span style={{ marginLeft: '0.4em' }}>{labels?.legend?.more ?? 'More'}</span>\n          </div>\n        )}\n      </footer>\n    );\n  }\n\n  function renderLabels() {\n    const style = {\n      fontSize,\n    };\n\n    if (!showWeekdayLabels && hideMonthLabels) {\n      return null;\n    }\n\n    return (\n      <>\n        {showWeekdayLabels && (\n          <g className={getClassName('legend-weekday')} style={style}>\n            {weeks[0].map((day, index) => {\n              if (index % 2 === 0) {\n                return null;\n              }\n\n              const dayIndex = (index + weekStart) % 7;\n\n              return (\n                <text\n                  x={-2 * blockMargin}\n                  y={textHeight + (fontSize / 2 + blockMargin) + (blockSize + blockMargin) * index}\n                  textAnchor=\"end\"\n                  key={index}\n                >\n                  {labels.weekdays ? labels.weekdays[dayIndex] : DEFAULT_WEEKDAY_LABELS[dayIndex]}\n                </text>\n              );\n            })}\n          </g>\n        )}\n        {!hideMonthLabels && (\n          <g className={getClassName('legend-month')} style={style}>\n            {getMonthLabels(weeks, labels.months).map(({ text, x }, index, labels) => {\n              // Skip the first month label if there's not enough space to the next one\n              if (index === 0 && labels[1] && labels[1].x - x <= MIN_DISTANCE_MONTH_LABELS) {\n                return null;\n              }\n\n              return (\n                <text x={(blockSize + blockMargin) * x} dominantBaseline=\"hanging\" key={x}>\n                  {text}\n                </text>\n              );\n            })}\n          </g>\n        )}\n      </>\n    );\n  }\n\n  const { width, height } = getDimensions();\n\n  const calendarStyles = {\n    maxWidth: width,\n\n    [`--${NAMESPACE}-level-0`]: colorScale[0],\n    [`--${NAMESPACE}-level-1`]: colorScale[1],\n    [`--${NAMESPACE}-level-2`]: colorScale[2],\n    [`--${NAMESPACE}-level-3`]: colorScale[3],\n    [`--${NAMESPACE}-level-4`]: colorScale[4],\n\n    ...(useAnimation && {\n      [`--${NAMESPACE}-loading`]: colorScale[0],\n      [`--${NAMESPACE}-loading-active`]:\n        colorScheme === 'light'\n          ? chroma(colorScale[0]).darken(0.3).hex()\n          : chroma(colorScale[0]).brighten(0.25).hex(),\n    }),\n  };\n\n  return (\n    <article className={`${NAMESPACE} ${styles.container}`} style={{ ...style, ...calendarStyles }}>\n      <svg\n        width={width}\n        height={height}\n        viewBox={`0 0 ${width} ${height}`}\n        className={getClassName('calendar', styles.calendar)}\n      >\n        {!loading && renderLabels()}\n        {renderCalendar()}\n      </svg>\n      {renderFooter()}\n    </article>\n  );\n};\n\nexport const Skeleton: FunctionComponent<Omit<Props, 'data'>> = props => (\n  <ActivityCalendar data={[]} {...props} />\n);\n\nexport default ActivityCalendar;\n"],"names":["NAMESPACE","LEVEL_COUNT","MIN_DISTANCE_MONTH_LABELS","DEFAULT_MONTH_LABELS","DEFAULT_WEEKDAY_LABELS","DEFAULT_LABELS","months","weekdays","totalCount","legend","less","more","useColorScheme","colorScheme","setColorScheme","useState","onChange","event","matches","useEffect","mediaQuery","window","matchMedia","addEventListener","removeEventListener","query","usePrefersReducedMotion","prefersReducedMotion","setPrefersReducedMotion","groupByWeeks","days","weekStart","arguments","length","undefined","normalizedDays","fillHoles","firstDate","parseISO","date","firstCalendarDate","getDay","subWeeks","nextDay","paddedDays","Array","differenceInCalendarDays","fill","Math","ceil","map","_","calendarWeek","slice","daysMap","reduce","day","set","Map","eachDayOfInterval","start","end","formatISO","representation","has","get","count","level","getMonthLabels","weeks","monthNames","labels","week","index","firstWeekDay","find","Error","month","getMonth","prev","text","x","y","filter","label","getClassName","name","styles","generateEmptyData","year","Date","getFullYear","defaultTheme","createTheme","light","dark","theme","_theme$light","_theme$dark","validateTheme","isColorScale","createColorScale","colors","invalidColor","color","chroma","valid","scale","mode","ActivityCalendar","_ref","data","blockMargin","blockRadius","blockSize","eventHandlers","fontSize","hideColorLegend","hideMonthLabels","hideTotalCount","labelsProp","loading","renderBlock","showWeekdayLabels","style","themeProp","totalCountProp","systemColorScheme","colorScale","useAnimation","getYear","Object","assign","textHeight","getDimensions","width","height","getEventHandlers","activity","keys","handlers","key","renderCalendar","weekIndex","dayIndex","animation","loadingAnimation","animationDelay","block","React","createElement","_extends","rx","ry","Fragment","transform","renderFooter","_labels$legend$less","_labels$legend$more","sum","className","footer","marginTop","replace","String","legendColors","marginRight","marginLeft","renderLabels","textAnchor","_ref2","dominantBaseline","calendarStyles","maxWidth","darken","hex","brighten","container","viewBox","calendar","Skeleton","props"],"mappings":"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","x_google_ignoreList":[5]}